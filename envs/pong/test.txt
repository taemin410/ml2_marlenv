def index_search_overseas(d, indexname, start_date = '', end_date = '', pagenum = 1):
    
    end_date = date_format(end_date)
    
    if start_date == '':
        start_date = end_date - pd.DateOffset(months=1)
    start_date = date_format(start_date)
    
    naver_index_overseas = 'https://finance.naver.com/world/worldDayListJson.nhn?symbol=' + indexname + '&fdtc=0'
    naver_index_overseas += '&page=' 
    naver_index_overseas += str(pagenum)
    raw = urlopen(naver_index_overseas)
    data = json.load(raw) 
    
#     print(data)
    
    if len(data) > 0:
        for n in range(len(data)):
            date = pd.to_datetime(data[n]['xymd']).date()
#             print(date)
            
            if date <= end_date and date >= start_date: #startdate와 enddate 사이에서 데이터 저장
                price = float(data[n]['clos']) #종가 처리
                d[date] = price #Save into dictionary
                print(price)
            elif date < start_date: #End the function if the date is before start_date
                return(d)

    if len(data) == 10:
        pagenum += 1
        index_search_overseas(d, indexname, start_date, end_date, pagenum)
   
    return(d)

s= dict()
                  
overseas_indices = {'SPI@SPX' : 'S&P 500', 'NA/S@IXIC' : 'Nasdaq', 'NII@NI225' : 'Nikkei 225', 
                    'HSI@HSI' : 'HSI', 'SHS@000001' : 'SSEC', 'DJI@DJI' : 'DJIA', 
                    'LNS@FTSE100' : 'FTSE100', 'PAS@CAC40' : 'CAC40', 'XTR@DAX30' : 'DAX30'}


index_search_overseas(s, 'SPI@SPX', '2019-10-01' )